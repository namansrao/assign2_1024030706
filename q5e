#include <iostream>
using namespace std;

class SymmetricMatrix {
private:
    int *A;
    int n;

public:
    SymmetricMatrix(int n) {
        this->n = n;
        A = new int[n*(n+1)/2];
    }

    void set(int i, int j, int x) {
        if (i >= j)
            A[i*(i-1)/2 + j-1] = x;
    }

    int get(int i, int j) {
        if (i >= j)
            return A[i*(i-1)/2 + j-1];
        else
            return A[j*(j-1)/2 + i-1];
    }

    void display() {
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= n; j++) {
                cout << get(i, j) << " ";
            }
            cout << endl;
        }
    }

    ~SymmetricMatrix() {
        delete[] A;
    }
};

int main() {
    int n;
    
    cout << "Enter the dimension of the symmetric matrix: ";
    cin >> n;
    
    SymmetricMatrix sm(n);
    
    cout << "Enter elements for the lower triangular part (symmetric matrix):" << endl;
    
    for (int i = 1; i <= n; i++) {
        for (int j = 1; j <= i; j++) {
            int x;
            cout << "Element [" << i << "," << j << "]: ";
            cin >> x;
            sm.set(i, j, x);
        }
    }
    
    cout << "\nSymmetric Matrix:" << endl;
    sm.display();
    
    return 0;
}
