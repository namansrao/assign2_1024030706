#include <iostream>
using namespace std;

class UpperTriangular {
private:
    int *A;
    int n;

public:
    UpperTriangular(int n) {
        this->n = n;
        A = new int[n*(n+1)/2];
    }

    void set(int i, int j, int x) {
        if (i <= j)
            A[i*(2*n-i+1)/2 + (j-i)] = x;
    }

    int get(int i, int j) {
        if (i <= j)
            return A[i*(2*n-i+1)/2 + (j-i)];
        return 0;
    }

    void display() {
        for (int i = 1; i <= n; i++) {
            for (int j = 1; j <= n; j++) {
                cout << get(i, j) << " ";
            }
            cout << endl;
        }
    }

    ~UpperTriangular() {
        delete[] A;
    }
};

int main() {
    int n;
    
    cout << "Enter the dimension of the upper triangular matrix: ";
    cin >> n;
    
    UpperTriangular ut(n);
    
    cout << "Enter elements for the upper triangular matrix:" << endl;
    
    for (int i = 1; i <= n; i++) {
        for (int j = i; j <= n; j++) {
            int x;
            cout << "Element [" << i << "," << j << "]: ";
            cin >> x;
            ut.set(i, j, x);
        }
    }
    
    cout << "\nUpper Triangular Matrix:" << endl;
    ut.display();
    
    return 0;
}
